{"version":3,"file":"static/js/710.eef6125f.chunk.js","mappings":"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","sources":["components/Loading.jsx","webpack://react-homework-template/./src/pages/MovieList.module.css?3104","components/MovieList.jsx","pages/SearchMovie.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","services/GetMoviesTrend.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\n// import css from 'pages/Home.module.css';\n// import { useLocation } from 'react-router-dom';\nimport { Audio } from 'react-loader-spinner';\n\nconst Loading = () => {\n\n  return (\n    <>\n       (\n        <Audio\n          className=\"true\"\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"green\"\n          ariaLabel=\"loading\"\n          wrapperStyle\n          wrapperClass\n        />\n      )\n    </>\n  );\n};\n\nLoading.propTypes = {\n  moviesData: PropTypes.array.isRequired,\n};\n\nexport default Loading;\n","// extracted by mini-css-extract-plugin\nexport default {\"older\":\"MovieList_older__0QZcu\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport css from 'pages/MovieList.module.css';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={css.older}>\n        {movies.map(\n          ({ id, original_title, title, poster_path, original_name }) => {\n            return (\n              <li key={id}>\n                {/* <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/original${poster_path}`\n                      : 'https://i.postimg.cc/g2dNFPgn/Placeholder.png'\n                  }\n                  alt={title || original_title || original_name}\n                  width=\"240px\"\n                /> */}\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {original_title || title}\n                </Link>\n              </li>\n            );\n          }\n        )}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  moviesData: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\n\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getSearchMovie } from 'services/GetMoviesTrend';\nimport MoviesList from 'components/MovieList';\nimport Loading from 'components/Loading';\n\nconst SearchMovie = ({ onSubmit }) => {\n  // const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get('movieId') ?? '';\n\n  useEffect(() => {\n    if (movieId === '') {\n      return;\n    }\n    setMovies([]);\n    setIsLoading(true);\n\n    getSearchMovie(movieId).then(movies => {\n      setMovies(movies.results);\n\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  const updateQueryString = evt => {\n    evt.preventDefault();\n    const movieIdValue = evt.target.value;\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movieId: movieIdValue });\n  };\n\n\n  //   const onChange = e => {\n  //     setMovies(e.target.value);\n  //   };\n\n  // const hendleSubmit = e => {\n  //   e.preventDefault();\n  //   onSubmit(movies);\n    \n  // };\n\n  // const visibleMovies = movies.filter(movie => movie.includes(movieId));\n\n  return (\n    <>\n      <div>\n        <form\n          // onSubmit={hendleSubmit}\n        >\n          <input\n            value={movieId}\n            type=\"text\"\n            onChange={updateQueryString}\n            placeholder=\"Search movie\"\n            autoComplete=\"off\"\n          />\n          <button type=\"Submit\" children=\"Search\">\n            --Search--\n          </button>\n          {/* <h3>Result search movie</h3> */}\n        </form>\n\n        {isLoading && <Loading />}\n\n        <MoviesList movies={movies} />\n      </div>\n    </>\n  );\n};\n\n\nSearchMovie.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchMovie;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd923cfd5f948398665667bae929771df';\n// const PER_PAGE = 12;\n\nexport const getMovies = async () => {\n  const res = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n  return await res.json();\n};\n\nexport const getSearchMovie = async movieId => {\n  const res = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${movieId}&page=1&include_adult=false`\n  );\n  return await res.json();\n};\n\nexport const getMoviesDetails = async movieId => {\n  const res = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return await res.json(res);\n};\n\nexport const getMoviesCredits = async movieId => {\n  const res = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return await res.json();\n};\n\nexport const getMoviesReviews = async movieId => {\n  const res = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1?`\n  );\n  return await res.json();\n};\n"],"names":["className","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","movies","location","useLocation","css","map","id","original_title","title","poster_path","original_name","to","state","from","onSubmit","useState","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","movieId","get","useEffect","getSearchMovie","then","results","obj","key","value","type","onChange","evt","preventDefault","movieIdValue","target","placeholder","autoComplete","children","Object","defineProperty","enumerable","configurable","writable","Loading","BASE_URL","API_KEY","getMovies","fetch","res","json","getMoviesDetails","getMoviesCredits","getMoviesReviews"],"sourceRoot":""}