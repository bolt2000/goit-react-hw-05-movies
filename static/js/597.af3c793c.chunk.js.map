{"version":3,"file":"static/js/597.af3c793c.chunk.js","mappings":"8LAyCA,UArCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,MAAK,SAAAC,GAC7BJ,EAAQI,EAAIL,MACZM,QAAQC,IAAIF,EAAIL,KACjB,GACF,GAAE,CAACH,KAGF,0BACmB,IAAhBG,EAAKQ,SAAgB,wBAAI,6CAEzBR,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,gBACEC,IAAK,kCAAoCH,EACzCI,IAAKH,EACLI,QAAQ,OACRC,MAAO,IACPC,QAAS,SAAAC,GAAC,OACPA,EAAEC,OAAON,IACR,mDAFM,KAKZ,4BACE,wBAAKF,KACL,uBAAIC,SAbCH,EADD,MAoBf,C,sBCvCD,SAASW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO1B,KAAKqB,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C,uJCjCMC,EAAW,+BACXC,EAAU,mCAGHC,EAAS,6BAAG,oGACLC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CC,IAD5C,cACjBvC,EADiB,gBAEVA,EAAI0C,OAFM,mFAAH,qDAKTC,EAAc,6BAAG,WAAMnD,GAAN,uFACViD,MAAM,GAAD,OAClBH,EADkB,iCACeC,EADf,iCAC+C/C,EAD/C,gCADK,cACtBQ,EADsB,gBAIfA,EAAI0C,OAJW,mFAAH,sDAOdE,EAAgB,6BAAG,WAAMpD,GAAN,uFACZiD,MAAM,GAAD,OAAIH,EAAJ,kBAAsB9C,EAAtB,oBAAyC+C,IADlC,cACxBvC,EADwB,gBAEjBA,EAAI0C,KAAK1C,GAFQ,mFAAH,sDAKhBF,EAAgB,6BAAG,WAAMN,GAAN,uFACZiD,MAAM,GAAD,OAClBH,EADkB,kBACA9C,EADA,4BAC2B+C,IAFpB,cACxBvC,EADwB,gBAIjBA,EAAI0C,OAJa,mFAAH,sDAOhBG,EAAgB,6BAAG,WAAMrD,GAAN,uFACZiD,MAAM,GAAD,OAClBH,EADkB,kBACA9C,EADA,4BAC2B+C,EAD3B,4BADO,cACxBvC,EADwB,gBAIjBA,EAAI0C,OAJa,mFAAH,qD","sources":["components/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/GetMoviesTrend.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesCredits } from 'services/GetMoviesTrend';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMoviesCredits(movieId).then(res => {\n      setCast(res.cast);\n      console.log(res.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast.length === 0 && <h3>We don't have any reviews for this movie</h3>}\n\n      {cast.map(({ id, profile_path, name, character }) => (\n        <li key={id}>\n          <img\n            src={'https://image.tmdb.org/t/p/w500' + profile_path}\n            alt={name}\n            loading=\"lazy\"\n            width={160}\n            onError={e =>\n              (e.target.src =\n                'https://via.placeholder.com/160x240?text=No+photo')\n            }\n          />\n          <div>\n            <h3>{name}</h3>\n            <p>{character}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd923cfd5f948398665667bae929771df';\n// const PER_PAGE = 12;\n\nexport const getMovies = async () => {\n  const res = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n  return await res.json();\n};\n\nexport const getSearchMovie = async movieId => {\n  const res = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${movieId}&page=1&include_adult=false`\n  );\n  return await res.json();\n};\n\nexport const getMoviesDetails = async movieId => {\n  const res = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return await res.json(res);\n};\n\nexport const getMoviesCredits = async movieId => {\n  const res = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return await res.json();\n};\n\nexport const getMoviesReviews = async movieId => {\n  const res = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1?`\n  );\n  return await res.json();\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getMoviesCredits","then","res","console","log","length","map","id","profile_path","name","character","src","alt","loading","width","onError","e","target","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","API_KEY","getMovies","fetch","json","getSearchMovie","getMoviesDetails","getMoviesReviews"],"sourceRoot":""}