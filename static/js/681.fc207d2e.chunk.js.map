{"version":3,"file":"static/js/681.fc207d2e.chunk.js","mappings":"8LA8BA,UA1BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,MAAK,SAAAJ,GAC7BC,EAAUD,EAAOK,SACjBC,QAAQC,IAAIP,EAAOK,QACpB,GACF,GAAE,CAACR,KAGF,iCACE,wBACGG,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADC,MAOK,IAAlBX,EAAOY,SAAgB,wBAAI,+CAGjC,C,sLC3BKC,EAAW,+BACXC,EAAU,mCAGHC,EAAS,mCAAG,oGACLC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CC,IAD5C,cACjBG,EADiB,gBAEVA,EAAIC,OAFM,mFAAH,qDAKTC,EAAc,mCAAG,WAAMtB,GAAN,uFACVmB,MAAM,GAAD,OAClBH,EADkB,iCACeC,EADf,iCAC+CjB,EAD/C,gCADK,cACtBoB,EADsB,gBAIfA,EAAIC,OAJW,mFAAH,sDAOdE,EAAgB,mCAAG,WAAMvB,GAAN,uFACZmB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBhB,EAAtB,oBAAyCiB,IADlC,cACxBG,EADwB,gBAEjBA,EAAIC,KAAKD,GAFQ,mFAAH,sDAKhBI,EAAgB,mCAAG,WAAMxB,GAAN,uFACZmB,MAAM,GAAD,OAClBH,EADkB,kBACAhB,EADA,4BAC2BiB,IAFpB,cACxBG,EADwB,gBAIjBA,EAAIC,OAJa,mFAAH,sDAOhBf,EAAgB,mCAAG,WAAMN,GAAN,uFACZmB,MAAM,GAAD,OAClBH,EADkB,kBACAhB,EADA,4BAC2BiB,EAD3B,4BADO,cACxBG,EADwB,gBAIjBA,EAAIC,OAJa,mFAAH,qD,sBC7B7B,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO3B,KAAKsB,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Reviews.jsx","services/GetMoviesTrend.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesReviews } from 'services/GetMoviesTrend';\n\nconst Rewievs = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    getMoviesReviews(movieId).then(review => {\n      setReview(review.results);\n      console.log(review.results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {review.map(({ author, content, id }) => (\n          <li key={id}>\n            <h4>{author}</h4>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n      {review.length === 0 && <h3>We don't have any reviews for this movie</h3>}\n    </>\n  );\n};\n\nexport default Rewievs;\n","\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd923cfd5f948398665667bae929771df';\n// const PER_PAGE = 12;\n\nexport const getMovies = async () => {\n  const res = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n  return await res.json();\n};\n\nexport const getSearchMovie = async movieId => {\n  const res = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${movieId}&page=1&include_adult=false`\n  );\n  return await res.json();\n};\n\nexport const getMoviesDetails = async movieId => {\n  const res = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return await res.json(res);\n};\n\nexport const getMoviesCredits = async movieId => {\n  const res = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return await res.json();\n};\n\nexport const getMoviesReviews = async movieId => {\n  const res = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1?`\n  );\n  return await res.json();\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","review","setReview","useEffect","getMoviesReviews","then","results","console","log","map","author","content","id","length","BASE_URL","API_KEY","getMovies","fetch","res","json","getSearchMovie","getMoviesDetails","getMoviesCredits","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}